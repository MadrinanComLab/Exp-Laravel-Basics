TO RUN LARAVEL APP, ENTER ON THE COMMAND PROMPT (IN THIS DIRECTORY):
- php artisan serve

EXTERNAL CSS AND JS WILL BE STORED IN public FOLDER

COMMAND FOR CREATING LARAVEL CONTROLLER:
php artisan make:controller ControllerName

LOCATION OF THE CONTROLLER:
app/Http/Controllers

COMMAND FOR CREATING LARAVEL MIGRATION:
php artisan make:migration migration_name

LOCATION OF MIGRATION:
database/migrations

COMMAND TO RUN MIGRATION SCRIPTS:
php artisan migrate

NOTE: MAKE USE THAT Apache AND MySQL SERVERS WAS OPEN IN XAMPP BEFORE RUNNING THE MIGRATION SCRIPTS

THIS COMMAND WILL RE RUN THE MIGRATION SCRIPTS BUT WILL DROP EXISTING TABLE
php artisan migrate:fresh

// OPTION #1 FOR ADDING COLUMN TO A TABLE
IF YOU ADDED COLUMN TO YOUR TABLE YOU CANNOT UPDATE THE DATABASE IN THE SERVER BY JUST ENTERING
php artisan migrate

YOU HAVE TO ROLLBACK FIRST, TO ROLLBACK THE MIGRATION USE THIS COMMAND:
php artisan migrate:rollback

AFTER YOU ROLLBACK THEN ENTER THE COMMAND: php artisan migrate THEN THAT WILL UPDATE YOUR DATABASE

// OPTION #2 FOR ADDING COLUMN TO A TABLE
IN OPTION #1 IT WILL ADD THE NEW COLUMN BUT THE DATA STORED IN YOUR DATABASE WILL BE GONE. SO IN PRODUCTION IT WAS NOT
ADVISABLE TO USE, SO DO THIS INSTEAD:
1.) RUN THIS COMMAND: php artisan make:migration column_name_you_want_to_add_to_a_table | EXAMPLE: php artisan make:migration add_price_to_pizzas_table
// NOTE FOR THIS STEP: NAMING CONVENTION WAS IMPORTANT IN THIS PROCESS. YOU MUST DO IT SIMILAR TO THE GIVEN EXAMPLE
2.) RUN THIS COMMAND: php artisan migrate | NOW OPTION #2 IS DONE.

NOTE: SINCE THROUGH THE USE OF OPTION #2, THE NEW MIGRATION SCRIPT IS IN 2ND BATCH, IF YOU ROLLBACK IT, FIRST BATCH WON'T BE AFFECTED

COMMAND FOR CREATING ELOQUENT MODEL:
php artisan make:model Name | EXAMPLE php artisan make:model Pizza

LOCATION OF THE ELOQUENT MODEL:
app/Models

SOMETHING TO REFLECT WITH MIGRATION AND ELOQUENT MODEL:
BOTH OF THESE ARE FOR MANIPULATING DATABASE
* MIGRATION WAS FOR ADDING/CREATING TABLE AND DATABSES
* ELOQUENT WAS FOR ACCESSING DATA FROM SPECIFIC TABLE AND MANIPULATING DATA INSIDE DATABASE

MVC NAMING CONVENTION/CONTROLLER NAMING CONVENTION

                            PIZZA MODEL
Request    | Route            | Controller & Action     | View
-----------+------------------+-------------------------+----------
GET        | /pizzas          | PizzaController@index   | index
GET        | /pizzas/{id}     | PizzaController@show    | show
GET        | /pizzas/create   | PizzaController@create  | create
POST       | /pizzas          | PizzaController@store   | ---
DELETE     | /pizzas/{id}     | PizzaController@destroy | ---